{
  "uid" : "76ea87aec854bf3d",
  "name" : "test_simple_assume[用例1]",
  "fullName" : "test_fixture#test_simple_assume",
  "historyId" : "76d008e295704d88114ae20ef35fdf5b",
  "time" : {
    "start" : 1609831032970,
    "stop" : 1609831032969,
    "duration" : -1
  },
  "status" : "failed",
  "statusMessage" : "pytest_assume.plugin.FailedAssumption: \n1 Failed Assumptions:\n\ntest_fixture.py:47: AssumptionFailure\n>>\tpytest.assume(False)\nAssertionError: assert False",
  "statusTrace" : "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               1 Failed Assumptions:\nE               \nE               test_fixture.py:47: AssumptionFailure\nE               >>\tpytest.assume(False)\nE               AssertionError: assert False\n\n..\\venv\\lib\\site-packages\\six.py:702: FailedAssumption",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_fixture"
  }, {
    "name" : "host",
    "value" : "jjiliu"
  }, {
    "name" : "thread",
    "value" : "43592-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_fixture"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "x",
    "value" : "1"
  }, {
    "name" : "y",
    "value" : "1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "76ea87aec854bf3d.json",
  "parameterValues" : [ "1", "1" ]
}